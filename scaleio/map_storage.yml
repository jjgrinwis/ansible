---
# now map a volume to a host and create filesystem

# first some fact checking to fill global vars
- name: gather facts
  hosts: mdm

# first register host and to a collecting of the facts
- name: register host with scaleio
  hosts: sdc
  sudo: yes
  tasks:
    - name: run drv_cfg to register to the mdm, show ip we're using
      debug: var={{ ansible_eth0.ipv4.address }}

    # a little test with set_fact
    - name: set fact
      set_fact: sdc_ip={{ ansible_eth0.ipv4.address }}

    # register host with mdm hosts
    - name: run drv_cfg to register to the mdm
      command: /opt/emc/scaleio/sdc/bin/drv_cfg --add_mdm --ip {{ pdm }},{{ sdm }}

# now map volume to registerd host
- name: map volume to host
  hosts: pmdm
  tasks:
    - name: first login
      command: scli --login --mdm_ip {{ pdm }} --username admin --password {{ scaleio_password }}

    # a little test with set_fact, a fact is unique per host so we have to look it u
    # we can't set it in the play above as that's sdc_ip is available in other host, not the pmdm one.
    - name: set sdc_ip/var from sdc client
      set_fact: sdc_ip={{ hostvars[groups['sdc'][0]].ansible_eth0.ipv4.address }}

    - name: map volume to host
      command: scli --map_volume_to_sdc --volume_name {{ vol_name }} --sdc_ip {{ sdc_ip }}

    - name: just wait until device is present 
      #wait_for: path=/dev/scinia timeout=5
      pause: seconds=3

# now create partion and filesystem
- name: create partition and filesystem
  hosts: sdc
  sudo: yes
  tasks:
    - name: create label and 1 primary partition
      command: parted -s -a opt /dev/scinia mklabel msdos mkpart primary 0% 100%

    - name: mkfs on /dev/scsia1
      filesystem: fstype=ext3 dev=/dev/scinia1

    - name: mount /dev/scsia on /mnt
      mount: name=/mnt src=/dev/scinia1 fstype=ext3 state=mounted

    - name: set 777 permissions
      file: dest=/mnt state=directory mode=0777

# now start bonnie, should be installed with sdc play
- name: start some IO
  hosts: sdc
  sudo: yes
  tasks:
    - name: set memory
      set_fact: mem=ansible_memtotal_mb
      when: ansible_memtotal_mb is defined

    - name: set memory if not defined
      set_fact: mem=2048
      when: ansible_memtotal_mb is not defined

    - name: show mem
      debug: var=mem

    - name: start bonnie to generate some IOPS
      command: bonnie++ -d /mnt -r {{ mem }} -u ansible
      register: out

    - name: show stdout
      debug: var=out.stdout_lines
